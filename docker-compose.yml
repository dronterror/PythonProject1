services:
  db:
    image: postgres:15
    container_name: valmed-db
    environment:
      POSTGRES_USER: valmed
      POSTGRES_PASSWORD: valmedpass
      POSTGRES_DB: valmed
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - medlog-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U valmed"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: medlog_keycloak
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/valmed
      - KC_DB_USERNAME=valmed
      - KC_DB_PASSWORD=valmedpass
      - KC_HOSTNAME=keycloak.medlog.local
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_PROXY_ADDRESS_FORWARDING=true
      - KC_HTTP_CORS_ORIGINS=http://medlog.local,http://localhost,http://localhost:3000,http://localhost:5173,http://localhost:80,http://localhost:8081,https://localhost,https://medlog.local
      - KC_LOG_LEVEL=DEBUG
      - KC_PROXY=edge
      - KC_HEALTH_ENABLED=true
    command: start-dev
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - keycloak_data:/opt/keycloak/data
    expose:
      - "8080"
    labels:
      - "traefik.enable=true"
      # HTTP router
      - "traefik.http.routers.keycloak.rule=Host(`keycloak.medlog.local`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      # HTTPS router (for future SSL)
      - "traefik.http.routers.keycloak-secure.rule=Host(`keycloak.medlog.local`)"
      - "traefik.http.routers.keycloak-secure.entrypoints=websecure"
      - "traefik.http.routers.keycloak-secure.tls=true"
      # CORS Middleware definition
      - "traefik.http.middlewares.keycloak-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.keycloak-cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.keycloak-cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.keycloak-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.keycloak-cors.headers.addvaryheader=true"
      # Applying CORS middleware to routers
      - "traefik.http.routers.keycloak.middlewares=keycloak-cors"
      - "traefik.http.routers.keycloak-secure.middlewares=keycloak-cors"
    networks:
      - medlog-net
    ports:
      - "8081:8080"
    restart: "no"

  backend:
    build:
      context: ./backend
    container_name: medlog_backend
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    extra_hosts:
      - "keycloak.medlog.local:172.18.0.5"
    labels:
      - "traefik.enable=true"
      # Link all routers to a single service definition
      - "traefik.http.services.backend-service.loadbalancer.server.port=8000"

      # HTTP router
      - "traefik.http.routers.backend.rule=(Host(`localhost`) || Host(`medlog.local`)) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.routers.backend.priority=2"
      - "traefik.http.routers.backend.service=backend-service"

      # HTTPS router
      - "traefik.http.routers.backend-secure.rule=(Host(`localhost`) || Host(`medlog.local`)) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-secure.entrypoints=websecure"
      - "traefik.http.routers.backend-secure.tls=true"
      - "traefik.http.routers.backend-secure.priority=2"
      - "traefik.http.routers.backend-secure.service=backend-service"
    networks:
      - medlog-net
    environment:
      - PYTHONPATH=/app/backend
      - DATABASE_URL=postgresql://valmed:valmedpass@db:5432/valmed

  frontend:
    build:
      context: ./frontend-medlogistics
    container_name: medlog_frontend
    environment:
      - NODE_ENV=development
      - VITE_KEYCLOAK_URL=http://keycloak.medlog.local:8080
      - VITE_API_BASE_URL=/api/v1
    extra_hosts:
      - "keycloak.medlog.local:172.18.0.5"
    labels:
      - "traefik.enable=true"
      # Link all routers to a single service definition
      - "traefik.http.services.frontend-service.loadbalancer.server.port=80"
      
      # HTTP router - Lower priority to act as a catch-all
      - "traefik.http.routers.frontend.rule=Host(`localhost`) || Host(`medlog.local`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.priority=1"
      - "traefik.http.routers.frontend.service=frontend-service"

      # HTTPS router - Lower priority to act as a catch-all
      - "traefik.http.routers.frontend-secure.rule=Host(`localhost`) || Host(`medlog.local`)"
      - "traefik.http.routers.frontend-secure.entrypoints=websecure"
      - "traefik.http.routers.frontend-secure.tls=true"
      - "traefik.http.routers.frontend-secure.priority=1"
      - "traefik.http.routers.frontend-secure.service=frontend-service"
    networks:
      - medlog-net
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "80"

  traefik:
    image: traefik:v2.10
    container_name: medlog_traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/tls.yml:/etc/traefik/tls.yml:ro
      - ./traefik/certs:/certs:ro
    networks:
      - medlog-net

  test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["poetry", "run", "pytest", "tests", "--tb=short", "-v"]
    depends_on:
      - backend
      - db
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://valmed:valmedpass@db:5432/valmed
    networks:
      - medlog-net
    restart: "no"

  # Service to run database migrations
  migrations:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["poetry", "run", "alembic", "upgrade", "head"]
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://valmed:valmedpass@db:5432/valmed
    networks:
      - medlog-net
    restart: "no"

volumes:
  pgdata:
  keycloak_data:

networks:
  medlog-net:
    external: false 