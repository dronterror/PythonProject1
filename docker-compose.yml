version: "3.8"

services:
  db:
    image: postgres:15
    container_name: valmed-db
    environment:
      POSTGRES_USER: valmed
      POSTGRES_PASSWORD: valmedpass
      POSTGRES_DB: valmed
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U valmed"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: medlog_backend
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    networks:
      - web
    environment:
      - PYTHONPATH=/app/backend
      - DATABASE_URL=postgresql://valmed:valmedpass@db:5432/valmed

  frontend:
    build:
      context: ./frontend-medlogistics
    container_name: medlog_frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`) || Host(`medlog.local`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - web

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/traefik.yml
    networks:
      - web

  test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["poetry", "run", "pytest", "tests", "--tb=short", "-v"]
    depends_on:
      - backend
      - db
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://valmed:valmedpass@db:5432/valmed
    restart: "no"

  # Service to run database migrations
  migrations:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: ["poetry", "run", "alembic", "upgrade", "head"]
    depends_on:
      db:
        condition: service_healthy
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://valmed:valmedpass@db:5432/valmed
    restart: "no"

volumes:
  pgdata:

networks:
  web:
    external: false 